1.选择排序：每轮选择最小的放到前面
i代表第一个数据的位置
j代表后部每一个数据的位置
｛8，2，3，7，1｝
	
｛8,2，3，7，1}	i	j	ary[i] ary[j] ary[i]>ary[j] [i]<->[j]
｛8|2，3，7，1｝	0	1	8		2		true		8<->2
｛2|8，3，7，1｝	0	2	2		3		false		
｛2|8，3，7，1｝	0	3	2		7		false		
｛2|8，3，7，1｝	0	4	2		1		true		2<->1
｛1,8|3，7，2｝	1	2	8		3		true		8<->3
｛1,3|8，7，2｝	1	3	3		7		false
｛1,3|8，7，2｝	1	4	3		2		true		3<->2
｛1,2,8|7，3｝	2	3	8		7		true		8<->7
｛1,2,7|8，3｝	2	4	7		3		true		7<->3
｛1,2,3,8|7｝	3	4	8		7		true		8<->7
｛1,2,3,7,8｝	,,,,,,,,,,,,




冒泡排序：i 是用来记次数的，j代表每一次比较元素
i＝0
j	j+1
 2) 冒泡排序
  原理: a 逐一比较数组中相邻的两个元素, 如果后面
         的数字小于前面的数字, 就交换先后元素.
       b 经过一个轮次的比较, 一定有一个最大的排
         在最后的位置.
       c 每次比较剩下的元素, 经过n-1次比较, 可以
         实现排序
  简单说: 比较相邻元素,大的向后交换
   原理说明:
   ary={8,2,3,7,1}
   ary={2,8,3,7,1}
   ary={2,3,8,7,1}
   ary={2,3,7,8,1}
   ary={2,3,7,1|8}
   ary={2,3,7,1|8}
   ary={2,3,7,1|8}
   ary={2,3,1|7,8}
   ary={2,3,1|7,8}
   ary={2,1|3,7,8}
   ary={1,2,3,7,8}
   i代表次数
   j代表比较位置
    ary     i j j+1 ary[j] ary[j+1] [j]>[j+1] [j]<->[j+1]
{8,2,3,7,1} 0 0  1    8       2       true      8<->2
{2,8,3,7,1} 0 1  2    8       3       true      8<->3
{2,3,8,7,1} 0 2  3    8       7       true      8<->7
{2,3,7,8,1} 0 3  4    8       1       true      8<->1
{2,3,7,1|8} 1 0  1    2       3       false     
{2,3,7,1|8} 1 1  2    3       7       false 
{2,3,7,1|8} 1 2  3    7       1       true      7<->1
{2,3,1|7,8} 2 0  1    2       3       false
{2,3,1|7,8} 2 1  2    3       1       true      3<->1
{2,1|3,7,8} 3 0  1    2       1       true      2<->1
{1,2,3,7,8}
  i = 0~ < ary.length-1
    j = 0~ < ary.length - i -1;  
      if([j]>[j+1]){
  	    [j]<->[j+1]
      }
      
      
 3) 插入排序
  原理: a 将数组分为两部分, 将后部分的第一张逐一
         与前部分每一张比较, 如果当前元素小, 就
         一点被比较元素.
        b 找到合理位置插入.
  原理说明:
   temp = 1
  {8|2,3,7,1}
  {2,8|8,7,1}
  {2,3,8|7,1}
  {2,3,8|8,1}
  {2,3,7,8|8}
  {2,3,7,7|8}
  {2,3,3,7|8}
  {2,2,3,7|8}
  {1,2,3,7|8}
   
   temp 代表取出的待插入元素
   i 代表后组待插入元素 位置
   j 代表前组每个元素的位置
                                     (移动)     插入
   ary      i  t  j  ary[j]  t<[j] [j]->[j+1] t->[j+1]
{8|2,3,7,5} 1  2  0    8     true   8->[j+1]   
{8|8,3,7,5} 1  2 -1                            2->[j+1]
{2,8|3,7,5} 2  3  1    8     true   8->[j+1]
{2,8|8,7,5} 2  3  0    2     false             3->[j+1]
{2,3,8|7,5} 3  7  2    8     true   8->[j+1]
{2,3,8|8,5} 3  7  1    3     false             7->[j+1]
{2,3,7,8|5} 4  5  3    8     true   8->[j+1] 
{2,3,7,8|8} 4  5  2    7     true   7->[j+1] 
{2,3,7,7|8} 4  5  1    3     false             5->[j+1]
{2,3,5,7|8} 5
 
 i= 1 ~ <ary.length, i++
	 t = [i];
		 j= i-1 ~ >=0, j--
		 if(t<[j]){
		 	[j]->[j+1] //移动
		 }else{
		  	break j;
		 }
	 t->[j+1]//插入
 
 3) 插入排序
  原理: a 将数组分为两部分, 将后部分的第一张逐一
         与前部分每一张比较, 如果当前元素小, 就
         一点被比较元素.
        b 找到合理位置插入.
  原理说明:
   temp = 1
  {8|2,3,7,1}
  {2,8|8,7,1}
  {2,3,8|7,1}
  {2,3,8|8,1}
  {2,3,7,8|8}
  {2,3,7,7|8}
  {2,3,3,7|8}
  {2,2,3,7|8}
  {1,2,3,7|8}
   
   temp 代表取出的待插入元素
   i 代表后组待插入元素 位置
   j 代表前组每个元素的位置
                                     (移动)     插入
   ary      i  t  j  ary[j]  t<[j] [j]->[j+1] t->[j+1]
{8|2,3,7,5} 1  2  0    8     true   8->[j+1]   
{8|8,3,7,5} 1  2 -1                            2->[j+1]
{2,8|3,7,5} 2  3  1    8     true   8->[j+1]
{2,8|8,7,5} 2  3  0    2     false             3->[j+1]
{2,3,8|7,5} 3  7  2    8     true   8->[j+1]
{2,3,8|8,5} 3  7  1    3     false             7->[j+1]
{2,3,7,8|5} 4  5  3    8     true   8->[j+1] 
{2,3,7,8|8} 4  5  2    7     true   7->[j+1] 
{2,3,7,7|8} 4  5  1    3     false             5->[j+1]
{2,3,5,7|8} 5
 
 i= 1 ~ <ary.length, i++
	 t = [i];
		 j= i-1 ~ >=0, j--
		 if(t<[j]){
		 	[j]->[j+1] //移动
		 }else{
		  	break j;
		 }
	 t->[j+1]//插入
 
 
 i代表待插入的元素，j代表前边的元素。t是取出的
      
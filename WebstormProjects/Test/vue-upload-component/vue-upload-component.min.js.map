{"version":3,"file":"vue-upload-component.min.js","sources":["../src/InputFile.vue","../src/FileUpload.vue"],"sourcesContent":["<template>\n  <input\n    type=\"file\"\n    :name=\"$parent.name\"\n    :id=\"$parent.inputId || $parent.name\"\n    :accept=\"$parent.accept\"\n    @change=\"change\"\n    :webkitdirectory=\"$parent.directory && $parent.features.directory\"\n    :directory=\"$parent.directory && $parent.features.directory\"\n    :multiple=\"$parent.multiple && $parent.features.html5\"\n  />\n</template>\n<script>\nexport default {\n  methods: {\n    change(e) {\n      this.$destroy()\n      this.$parent.addInputFile(e.target)\n      // eslint-disable-next-line\n      new this.constructor({\n        parent: this.$parent,\n        el: this.$el,\n      })\n    }\n  }\n}\n</script>\n","<template>\n  <label :class=\"className\">\n    <slot></slot>\n    <input-file></input-file>\n  </label>\n</template>\n<style>\n.file-uploads {\n  overflow: hidden;\n  position: relative;\n  text-align: center;\n  display: inline-block;\n}\n.file-uploads.file-uploads-html4 input[type=\"file\"] {\n  opacity: 0;\n  font-size: 20em;\n  z-index: 1;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n.file-uploads.file-uploads-html5 input[type=\"file\"] {\n  overflow: hidden;\n  position: fixed;\n  width: 1px;\n  height: 1px;\n  z-index: -1;\n  opacity: 0;\n}\n</style>\n<script>\nimport InputFile from './InputFile.vue'\nexport default {\n  components: {\n    InputFile,\n  },\n  props: {\n    inputId: {\n      type: String,\n    },\n\n    name: {\n      type: String,\n      default: 'file',\n    },\n\n    accept: {\n      type: String,\n    },\n\n    multiple: {\n      type: Boolean,\n    },\n\n    addIndex: {\n      type: [Boolean, Number],\n    },\n\n    directory: {\n      type: Boolean,\n    },\n\n    postAction: {\n      type: String,\n    },\n\n    putAction: {\n      type: String,\n    },\n\n    headers: {\n      type: Object,\n      default: Object,\n    },\n\n    data: {\n      type: Object,\n      default: Object,\n    },\n\n    timeout: {\n      type: Number,\n      default: 0,\n    },\n\n\n    drop: {\n      default: false,\n    },\n\n    dropDirectory: {\n      type: Boolean,\n      default: true,\n    },\n\n    size: {\n      type: Number,\n      default: 0,\n    },\n\n    extensions: {\n      default: Array,\n    },\n\n\n    value: {\n      type: Array,\n      default: Array,\n    },\n\n    thread: {\n      type: Number,\n      default: 1,\n    },\n  },\n\n  data() {\n    return {\n      files: this.value,\n      features: {\n        html5: true,\n        directory: false,\n        drag: false,\n      },\n\n      active: false,\n      dropActive: false,\n\n      uploading: 0,\n\n      destroy: false,\n    }\n  },\n\n\n  /**\n   * mounted\n   * @return {[type]} [description]\n   */\n  mounted() {\n    let input = document.createElement('input')\n    input.type = 'file'\n    input.multiple = true\n\n    // html5 特征\n    if (window.FormData && input.files) {\n      // 上传目录特征\n      if (typeof input.webkitdirectory === 'boolean' || typeof input.directory === 'boolean') {\n        this.features.directory = true\n      }\n\n      // 拖拽特征\n      if (this.features.html5 && typeof input.ondrop !== 'undefined') {\n        this.features.drop = true\n      }\n    } else {\n      this.features.html5 = false\n    }\n\n    // files 定位缓存\n    this.maps = {}\n\n    this.$nextTick(function () {\n\n      // 更新下父级\n      if (this.$parent) {\n        this.$parent.$forceUpdate()\n      }\n\n      // 拖拽渲染\n      this.watchDrop(this.drop)\n    })\n  },\n\n  /**\n   * beforeDestroy\n   * @return {[type]} [description]\n   */\n  beforeDestroy() {\n    // 已销毁\n    this.destroy = true\n\n    // 设置成不激活\n    this.active = false\n  },\n\n  computed: {\n    /**\n     * uploading 正在上传的线程\n     * @return {[type]} [description]\n     */\n\n    /**\n     * uploaded 文件列表是否全部已上传\n     * @return {[type]} [description]\n     */\n    uploaded() {\n      let file\n      for (let i = 0; i < this.files.length; i++) {\n        file = this.files[i]\n        if (file.fileObject && !file.error && !file.success) {\n          return false\n        }\n      }\n      return true\n    },\n\n\n    className() {\n      return [\n        'file-uploads',\n        this.features.html5 ? 'file-uploads-html5' : 'file-uploads-html4',\n        this.features.directory && this.directory ? 'file-uploads-directory' : undefined,\n        this.features.drop && this.drop ? 'file-uploads-drop' : undefined,\n      ]\n    }\n  },\n\n\n  watch: {\n    active(active) {\n      this.watchActive(active)\n    },\n\n    dropActive() {\n      if (this.$parent) {\n        this.$parent.$forceUpdate()\n      }\n    },\n\n    drop(value) {\n      this.watchDrop(value)\n    },\n\n    value(files) {\n      if (this.files === files) {\n        return\n      }\n      this.files = files\n\n      let oldMaps = this.maps\n\n      // 重写 maps 缓存\n      this.maps = {}\n      for (let i = 0; i < this.files.length; i++) {\n        let file = this.files[i]\n        this.maps[file.id] = file\n      }\n\n      // add, update\n      for (let key in this.maps) {\n        let newFile = this.maps[key]\n        let oldFile = oldMaps[key]\n        if (newFile !== oldFile) {\n          this.emitFile(newFile, oldFile)\n        }\n      }\n\n      // delete\n      for (let key in oldMaps) {\n        if (!this.maps[key]) {\n          this.emitFile(undefined, oldMaps[key])\n        }\n      }\n    },\n  },\n\n  methods: {\n\n    // 清空\n    clear() {\n      if (this.files.length) {\n        let files = this.files\n        this.files = []\n\n        // 定位\n        this.maps = {}\n\n        // 事件\n        this.emitInput()\n        for (let i = 0; i < files.length; i++) {\n          this.emitFile(undefined, files[i])\n        }\n      }\n      return true\n    },\n\n    // 选择\n    get(id) {\n      if (!id) {\n        return false\n      }\n\n      if (typeof id === 'object') {\n        return this.maps[id.id] || false\n      }\n\n      return this.maps[id] || false\n    },\n\n    // 添加\n    add(_files, index = this.addIndex) {\n      let files = _files\n      let isArray = files instanceof Array\n\n      // 不是数组整理成数组\n      if (!isArray) {\n        files = [files]\n      }\n\n      // 遍历规范对象\n      let addFiles = []\n      for (let i = 0; i < files.length; i++) {\n        let file = files[i]\n        if (this.features.html5 && file instanceof Blob) {\n          file = {\n            file,\n            size: file.size,\n            name: file.webkitRelativePath || file.relativePath || file.name || 'unknown',\n            type: file.type,\n          }\n        }\n        let fileObject = false\n        if (file.fileObject === false) {\n          // false\n        } else if (file.fileObject) {\n          fileObject = true\n        } else if (typeof Element !== 'undefined' && file.el instanceof Element) {\n          fileObject = true\n        } else if (typeof Blob !== 'undefined' && file.file instanceof Blob) {\n          fileObject = true\n        }\n        if (fileObject) {\n          file = {\n            fileObject: true,\n            size: -1,\n            name: 'Filename',\n            type: '',\n            active: false,\n            error: '',\n            success: false,\n            putAction: this.putAction,\n            postAction: this.postAction,\n            timeout: this.timeout,\n            ...file,\n            response: {},\n\n            progress: '0.00',          // 只读\n            speed: 0,                  // 只读\n            // xhr: false,                // 只读\n            // iframe: false,             // 只读\n          }\n\n          file.data = {\n            ...this.data,\n            ...file.data ? file.data : {},\n          }\n\n          file.headers = {\n            ...this.headers,\n            ...file.headers ? file.headers : {},\n          }\n        }\n\n        // 必须包含 id\n        if (!file.id) {\n          file.id = Math.random().toString(36).substr(2)\n        }\n\n        if (this.emitFilter(file, undefined)) {\n          continue\n        }\n\n        addFiles.push(file)\n\n        // 只允许单个文件\n        if (!this.multiple) {\n          break\n        }\n      }\n\n      // 没有文件\n      if (!addFiles.length) {\n        return false\n      }\n\n\n      // 只允许单个文件 删除所有\n      if (!this.multiple) {\n        this.clear()\n      }\n\n\n      // 添加进去 files\n      let newFiles\n      if (index === true || index === 0) {\n        newFiles = addFiles.concat(this.files)\n      } else if (index) {\n        newFiles = addFiles.concat([])\n        newFiles.splice(index, 0, addFiles)\n      } else {\n        newFiles = this.files.concat(addFiles)\n      }\n\n      this.files = newFiles\n\n      // 定位\n      for (let i = 0; i < addFiles.length; i++) {\n        let file = addFiles[i]\n        this.maps[file.id] = file\n      }\n\n      // 事件\n      this.emitInput()\n      for (let i = 0; i < addFiles.length; i++) {\n        this.emitFile(addFiles[i], undefined)\n      }\n\n      return isArray ? addFiles : addFiles[0]\n    },\n\n\n\n    // 添加表单文件\n    addInputFile(el) {\n      let files = []\n      if (el.files) {\n        for (let i = 0; i < el.files.length; i++) {\n          let file = el.files[i]\n          files.push({\n            size: file.size,\n            name: file.webkitRelativePath || file.relativePath || file.name,\n            type: file.type,\n            file,\n            el\n          })\n        }\n      } else {\n        files.push({\n          name: el.value.replace(/^.*?([^\\/\\\\\\r\\n]+)$/, '$1'),\n          el,\n        })\n      }\n      return this.add(files)\n    },\n\n\n    // 添加 DataTransfer\n    addDataTransfer(dataTransfer) {\n      let files = []\n      if (dataTransfer.items && dataTransfer.items.length) {\n        let items = []\n        for (let i = 0; i < dataTransfer.items.length; i++) {\n          let item = dataTransfer.items[i]\n          if (item.getAsEntry) {\n            item = item.getAsEntry()\n          } else if (item.webkitGetAsEntry) {\n            item = item.webkitGetAsEntry()\n          } else {\n            item = item.getAsFile()\n          }\n          if (item) {\n            items.push(item)\n          }\n        }\n\n        return new Promise((resolve, reject) => {\n          let forEach = (i) => {\n            let item = items[i]\n            // 结束 或者已有文件了\n            if (!item || (!this.multiple && files.length)) {\n              return resolve(this.add(files))\n            }\n            this.getEntry(item).then(function (results) {\n              files.push(...results)\n              forEach(i + 1)\n            })\n          }\n          forEach(0)\n        })\n      }\n\n      if (dataTransfer.files.length) {\n        for (let i = 0; i < dataTransfer.files.length; i++) {\n          files.push(dataTransfer.files[i])\n          if (!this.multiple) {\n            break\n          }\n        }\n        return Promise.resolve(this.add(files))\n      }\n\n      return Promise.resolve([])\n    },\n\n\n    // 获得 entry\n    getEntry(entry, path = '') {\n      return new Promise((resolve, reject) => {\n        if (entry.isFile) {\n          entry.file(function (file) {\n            resolve([\n              {\n                size: file.size,\n                name: path + file.name,\n                type: file.type,\n                file,\n              }\n            ])\n          })\n        } else if (entry.isDirectory && this.dropDirectory) {\n          entry.createReader().readEntries((entries) => {\n            let files = []\n            let forEach = (i) => {\n              if (!entries[i] || (files.length && !this.multiple)) {\n                return resolve(files)\n              }\n              this.getEntry(entries[i], path + entry.name + '/').then((results) => {\n                files.push(...results)\n                forEach(i + 1)\n              })\n            }\n            forEach(0)\n          })\n        } else {\n          resolve([])\n        }\n      })\n    },\n\n\n    replace(id1, id2) {\n      let file1 = this.get(id1)\n      let file2 = this.get(id2)\n      if (!file1 || !file2 || file1 === file2) {\n        return false\n      }\n      let files = this.files.concat([])\n      let index1 = files.indexOf(file1)\n      let index2 = files.indexOf(file2)\n      if (index1 === -1 || index2 === -1) {\n        return false\n      }\n      files[index1] = file2\n      files[index2] = file1\n      this.files = files\n      this.emitInput()\n      return true\n    },\n\n    // 移除\n    remove(id) {\n      let file = this.get(id)\n      if (file) {\n        if (this.emitFilter(undefined, file)) {\n          return false\n        }\n        let files = this.files.concat([])\n        let index = files.indexOf(file)\n        if (index === -1) {\n          console.error('remove', file)\n          return false\n        }\n        files.splice(index, 1)\n        this.files = files\n\n        // 定位\n        delete this.maps[file.id]\n\n        // 事件\n        this.emitInput()\n        this.emitFile(undefined, file)\n      }\n      return file\n    },\n\n    // 更新\n    update(id, data) {\n      let file = this.get(id)\n      if (file) {\n        let newFile = {\n          ...file,\n          ...data\n        }\n        // 停用必须加上错误\n        if (file.fileObject && file.active && !newFile.active && !newFile.error && !newFile.success) {\n          newFile.error = 'abort'\n        }\n\n        if (this.emitFilter(newFile, file)) {\n          return false\n        }\n\n        let files = this.files.concat([])\n        let index = files.indexOf(file)\n        if (index === -1) {\n          console.error('update', file)\n          return false\n        }\n        files.splice(index, 1, newFile)\n        this.files = files\n\n        // 删除  旧定位 写入 新定位 （已便支持修改id)\n        delete this.maps[file.id]\n        this.maps[newFile.id] = newFile\n\n        // 事件\n        this.emitInput()\n        this.emitFile(newFile, file)\n        return newFile\n      }\n      return false\n    },\n\n\n\n    // 预处理 事件 过滤器\n    emitFilter(newFile, oldFile) {\n      let isPrevent = false\n      this.$emit('input-filter', newFile, oldFile, function () {\n        isPrevent = true\n        return isPrevent\n      })\n      return isPrevent\n    },\n\n    // 处理后 事件 分发\n    emitFile(newFile, oldFile) {\n      this.$emit('input-file', newFile, oldFile)\n      if (newFile && newFile.fileObject && newFile.active && (!oldFile || !oldFile.active)) {\n        this.uploading++\n        // 激活\n        this.$nextTick(function () {\n          setTimeout(() => {\n            this.upload(newFile).then(() => {\n              // eslint-disable-next-line\n              newFile = this.get(newFile)\n              if (newFile && newFile.fileObject) {\n                this.update(newFile, {\n                  active: false,\n                  success: !newFile.error\n                })\n              }\n            }).catch((e) => {\n              this.update(newFile, {\n                active: false,\n                success: false,\n                error: e.code || e.error || e.message || e\n              })\n            })\n          }, parseInt(Math.random() * 50 + 50, 10))\n        })\n      } else if ((!newFile || !newFile.fileObject || !newFile.active) && oldFile && oldFile.fileObject && oldFile.active) {\n        // 停止\n        this.uploading--\n      }\n\n      // 自动延续激活\n      if (this.active && (Boolean(newFile) !== Boolean(oldFile) || newFile.active !== oldFile.active)) {\n        this.watchActive(true)\n      }\n    },\n\n    emitInput() {\n      this.$emit('input', this.files)\n    },\n\n\n    // 上传\n    upload(id) {\n      let file = this.get(id)\n\n      // 被删除\n      if (!file) {\n        return Promise.reject('not_exists')\n      }\n\n      // 不是文件对象\n      if (!file.fileObject) {\n        return Promise.reject('file_object')\n      }\n\n      // 有错误直接响应\n      if (file.error) {\n        return Promise.reject(file.error)\n      }\n\n      // 已完成直接响应\n      if (file.success) {\n        return Promise.resolve(file)\n      }\n\n      // 后缀\n      let extensions = this.extensions\n      if (extensions && (extensions.length || typeof extensions.length === 'undefined')) {\n        if (typeof extensions !== 'object' || !(extensions instanceof RegExp)) {\n          if (typeof extensions === 'string') {\n            extensions = extensions.split(',').map(value => value.trim()).filter(value => value)\n          }\n          extensions = new RegExp('\\\\.(' + extensions.join('|').replace(/\\./g, '\\\\.') + ')$', 'i')\n        }\n        if (file.name.search(extensions) === -1) {\n          return Promise.reject('extension')\n        }\n      }\n\n      // 大小\n      if (this.size > 0 && file.size >= 0 && file.size > this.size) {\n        return Promise.reject('size')\n      }\n\n\n      if (this.features.html5 && file.putAction) {\n        return this.uploadPut(file)\n      } else if (this.features.html5) {\n        return this.uploadHtml5(file)\n      } else {\n        return this.uploadHtml4(file)\n      }\n    },\n\n    uploadPut(file) {\n      let querys = []\n      let value\n      for (let key in file.data) {\n        value = file.data[key]\n        if (value !== null && value !== undefined) {\n          querys.push(encodeURIComponent(key) + '=' + encodeURIComponent(value))\n        }\n      }\n      let queryString = querys.length ? (file.putAction.indexOf('?') === -1 ? '?' : '&') + querys.join('&') : ''\n      let xhr = new XMLHttpRequest()\n      xhr.open('PUT', file.putAction + queryString)\n      return this.uploadXhr(xhr, file, file.file)\n    },\n\n    uploadHtml5(file) {\n      let form = new window.FormData()\n      let value\n      for (let key in file.data) {\n        value = file.data[key]\n        if (value && typeof value === 'object' && typeof value.toString !== 'function') {\n          form.append(key, JSON.stringify(value))\n        } else if (value !== null && value !== undefined) {\n          form.append(key, value)\n        }\n      }\n      form.append(this.name, file.file, file.file.filename || file.name)\n      let xhr = new XMLHttpRequest()\n      xhr.open('POST', file.postAction)\n      return this.uploadXhr(xhr, file, form)\n    },\n\n    uploadXhr(xhr, _file, body) {\n      let file = _file\n      let speedTime = 0\n      let speedLoaded = 0\n\n      // 进度条\n      xhr.upload.onprogress = (e) => {\n        // 还未开始上传 已删除 未激活\n        file = this.get(file)\n        if (!e.lengthComputable || !file || !file.fileObject || !file.active) {\n          return\n        }\n\n        // 进度 速度 每秒更新一次\n        let speedTime2 = Math.round(Date.now() / 1000)\n        if (speedTime2 === speedTime) {\n          return\n        }\n        speedTime = speedTime2\n\n        file = this.update(file, {\n          progress: (e.loaded / e.total * 100).toFixed(2),\n          speed: e.loaded - speedLoaded,\n        })\n        speedLoaded = e.loaded\n      }\n\n      // 检查激活状态\n      let interval = setInterval(() => {\n        file = this.get(file)\n        if (file && file.fileObject && !file.success && !file.error && file.active) {\n          return\n        }\n\n        if (interval) {\n          clearInterval(interval)\n          interval = false\n        }\n\n        try {\n          xhr.abort()\n          xhr.timeout = 1\n        } catch (e) {\n        }\n      }, 100)\n\n      return new Promise((resolve, reject) => {\n        let complete\n        let fn = (e) => {\n          // 已经处理过了\n          if (complete) {\n            return\n          }\n          complete = true\n          if (interval) {\n            clearInterval(interval)\n            interval = false\n          }\n\n          file = this.get(file)\n\n          // 不存在直接响应\n          if (!file) {\n            return reject('not_exists')\n          }\n\n          // 不是文件对象\n          if (!file.fileObject) {\n            return reject('file_object')\n          }\n\n          // 有错误自动响应\n          if (file.error) {\n            return reject(file.error)\n          }\n\n          // 未激活\n          if (!file.active) {\n            return reject('abort')\n          }\n\n\n          // 已完成 直接相应\n          if (file.success) {\n            return resolve(file)\n          }\n\n          let data = {}\n\n          switch (e.type) {\n            case 'timeout':\n            case 'abort':\n              data.error = e.type\n              break\n            case 'error':\n              if (!xhr.status) {\n                data.error = 'network'\n              } else if (xhr.status >= 500) {\n                data.error = 'server'\n              } else if (xhr.status >= 400) {\n                data.error = 'denied'\n              }\n              break\n            default:\n              if (xhr.status >= 500) {\n                data.error = 'server'\n              } else if (xhr.status >= 400) {\n                data.error = 'denied'\n              } else {\n                data.progress = '100.00'\n              }\n          }\n\n          if (xhr.responseText) {\n            let contentType = xhr.getResponseHeader('Content-Type')\n            if (contentType && contentType.indexOf('/json') !== -1) {\n              data.response = JSON.parse(xhr.responseText)\n            } else {\n              data.response = xhr.responseText\n            }\n          }\n\n          // 更新\n          file = this.update(file, data)\n\n          // 相应错误\n          if (file.error) {\n            return reject(file.error)\n          }\n\n          // 响应\n          return resolve(file)\n        }\n\n        // 事件\n        xhr.onload = fn\n        xhr.onerror = fn\n        xhr.onabort = fn\n        xhr.ontimeout = fn\n\n        // 超时\n        if (file.timeout) {\n          xhr.timeout = file.timeout\n        }\n\n        // headers\n        for (let key in file.headers) {\n          xhr.setRequestHeader(key, file.headers[key])\n        }\n\n        // 更新 xhr\n        file = this.update(file, { xhr })\n\n        // 开始上传\n        xhr.send(body)\n      })\n    },\n\n\n\n\n    uploadHtml4(_file) {\n      let file = _file\n      let onKeydown = function (e) {\n        if (e.keyCode === 27) {\n          e.preventDefault()\n        }\n      }\n\n      let iframe = document.createElement('iframe')\n      iframe.id = 'upload-iframe-' + file.id\n      iframe.name = 'upload-iframe-' + file.id\n      iframe.src = 'about:blank'\n      iframe.setAttribute('style', 'width:1px;height:1px;top:-999em;position:absolute; margin-top:-999em;')\n\n\n      let form = document.createElement('form')\n\n      form.action = file.postAction\n\n      form.name = 'upload-form-' + file.id\n\n\n      form.setAttribute('method', 'POST')\n      form.setAttribute('target', 'upload-iframe-' + file.id)\n      form.setAttribute('enctype', 'multipart/form-data')\n\n      let value\n      let input\n      for (let key in file.data) {\n        value = file.data[key]\n        if (value && typeof value === 'object' && typeof value.toString !== 'function') {\n          value = JSON.stringify(value)\n        }\n        if (value !== null && value !== undefined) {\n          input = document.createElement('input')\n          input.type = 'hidden'\n          input.name = key\n          form.appendChild(input)\n        }\n      }\n      form.appendChild(file.el)\n\n      document.body.appendChild(iframe).appendChild(form)\n\n\n\n\n      let getResponseData = function () {\n        let doc\n        try {\n          if (iframe.contentWindow) {\n            doc = iframe.contentWindow.document\n          }\n        } catch (err) {\n        }\n        if (!doc) {\n          try {\n            doc = iframe.contentDocument ? iframe.contentDocument : iframe.document\n          } catch (err) {\n            doc = iframe.document\n          }\n        }\n        if (doc && doc.body) {\n          return doc.body.innerHTML\n        }\n        return null\n      }\n\n\n      return new Promise((resolve, reject) => {\n        setTimeout(() => {\n          file = this.update(file, { iframe })\n\n          // 不存在\n          if (!file) {\n            return reject('not_exists')\n          }\n\n          // 定时检查\n          let interval = setInterval(() => {\n            file = this.get(file)\n            if (file && file.fileObject && !file.success && !file.error && file.active) {\n              return\n            }\n\n            if (interval) {\n              clearInterval(interval)\n              interval = false\n            }\n\n            iframe.onabort({ type: file ? 'abort' : 'not_exists' })\n          }, 100)\n\n\n          let complete\n          let fn = (e) => {\n            // 已经处理过了\n            if (complete) {\n              return\n            }\n            complete = true\n\n\n            if (interval) {\n              clearInterval(interval)\n              interval = false\n            }\n\n            // 关闭 esc 事件\n            document.body.removeEventListener('keydown', onKeydown)\n\n            file = this.get(file)\n\n            // 不存在直接响应\n            if (!file) {\n              return reject('not_exists')\n            }\n\n            // 不是文件对象\n            if (!file.fileObject) {\n              return reject('file_object')\n            }\n\n            // 有错误自动响应\n            if (file.error) {\n              return reject(file.error)\n            }\n\n            // 未激活\n            if (!file.active) {\n              return reject('abort')\n            }\n\n            // 已完成 直接相应\n            if (file.success) {\n              return resolve(file)\n            }\n\n            let response = getResponseData()\n            let data = {}\n            switch (e.type) {\n              case 'abort':\n                data.error = 'abort'\n                break\n              case 'error':\n                if (file.error) {\n                  data.error = file.error\n                } else if (response === null) {\n                  data.error = 'network'\n                } else {\n                  data.error = 'denied'\n                }\n                break\n              default:\n                if (file.error) {\n                  data.error = file.error\n                } else if (data === null) {\n                  data.error = 'network'\n                } else {\n                  data.progress = '100.00'\n                }\n            }\n\n            if (response !== null) {\n              if (response && response.substr(0, 1) === '{' && response.substr(response.length - 1, 1) === '}') {\n                try {\n                  response = JSON.parse(response)\n                } catch (err) {\n                }\n              }\n              data.response = response\n            }\n\n            // 更新\n            file = this.update(file, data)\n\n            if (file.error) {\n              return reject(file.error)\n            }\n\n            // 响应\n            return resolve(file)\n          }\n\n\n          // 添加事件\n          iframe.onload = fn\n          iframe.onerror = fn\n          iframe.onabort = fn\n\n\n          // 禁止 esc 键\n          document.body.addEventListener('keydown', onKeydown)\n\n          // 提交\n          form.submit()\n        }, 50)\n      }).then(function (res) {\n        iframe.parentNode && iframe.parentNode.removeChild(iframe)\n        return res\n      }).catch(function (res) {\n        iframe.parentNode && iframe.parentNode.removeChild(iframe)\n        return res\n      })\n    },\n\n\n\n    watchActive(active) {\n      let file\n      let index = 0\n      while ((file = this.files[index])) {\n        index++\n        if (!file.fileObject) {\n          // 不是文件对象\n        } else if (active && !this.destroy) {\n          if (this.uploading >= this.thread || (this.uploading && !this.features.html5)) {\n            break\n          }\n          if (!file.active && !file.error && !file.success) {\n            this.update(file, { active: true })\n          }\n        } else {\n          if (file.active) {\n            this.update(file, { active: false })\n          }\n        }\n      }\n      if (this.uploading === 0) {\n        this.active = false\n      }\n    },\n\n\n    watchDrop(_el) {\n      let el = _el\n      if (!this.features.drop) {\n        return\n      }\n\n      // 移除挂载\n      if (this.dropElement) {\n        try {\n          document.removeEventListener('dragenter', this.onDragenter, false)\n          document.removeEventListener('dragleave', this.onDragleave, false)\n          this.dropElement.removeEventListener('dragover', this.onDragover, false)\n          this.dropElement.removeEventListener('drop', this.onDrop, false)\n        } catch (e) {\n        }\n      }\n\n      if (!el) {\n        el = false\n      } else if (typeof el === 'string') {\n        el = document.querySelector(el) || this.$root.$el.querySelector(el)\n      } else if (el === true) {\n        el = this.$parent.$el\n      }\n\n      this.dropElement = el\n\n      if (this.dropElement) {\n        document.addEventListener('dragenter', this.onDragenter, false)\n        document.addEventListener('dragleave', this.onDragleave, false)\n        this.dropElement.addEventListener('dragover', this.onDragover, false)\n        this.dropElement.addEventListener('drop', this.onDrop, false)\n      }\n    },\n\n\n    onDragenter(e) {\n      e.preventDefault()\n      if (!this.dropActive) {\n        this.dropActive = true\n      }\n    },\n\n    onDragleave(e) {\n      e.preventDefault()\n      if (e.target.nodeName === 'HTML' || (e.screenX === 0 && e.screenY === 0 && e.screenY === 0 && !e.fromElement && e.offsetX < 0)) {\n        this.dropActive = false\n      }\n    },\n\n    onDragover(e) {\n      e.preventDefault()\n    },\n\n    onDrop(e) {\n      e.preventDefault()\n      this.dropActive = false\n      this.addDataTransfer(e.dataTransfer)\n    },\n  }\n}\n</script>\n"],"names":["render","e","$destroy","$parent","addInputFile","target","this","constructor","$el","String","Boolean","Number","Object","Array","value","input","document","createElement","type","multiple","window","FormData","files","webkitdirectory","directory","features","html5","ondrop","drop","maps","$nextTick","$forceUpdate","watchDrop","destroy","active","file","i","length","fileObject","error","success","undefined","watchActive","oldMaps","id","key","newFile","oldFile","emitFile","emitInput","_files","index","addIndex","isArray","addFiles","Blob","size","webkitRelativePath","relativePath","name","Element","el","putAction","postAction","timeout","data","headers","Math","random","toString","substr","emitFilter","push","clear","newFiles","concat","splice","replace","add","dataTransfer","items","item","getAsEntry","webkitGetAsEntry","getAsFile","Promise","resolve","reject","forEach","_this","getEntry","then","results","entry","path","isFile","isDirectory","_this2","dropDirectory","createReader","readEntries","entries","id1","id2","file1","get","file2","index1","indexOf","index2","isPrevent","$emit","uploading","upload","_this3","update","catch","code","message","parseInt","extensions","RegExp","split","map","trim","filter","join","search","uploadPut","uploadHtml5","uploadHtml4","querys","encodeURIComponent","queryString","xhr","XMLHttpRequest","open","uploadXhr","form","append","JSON","stringify","filename","_file","body","speedTime","speedLoaded","onprogress","_this4","lengthComputable","speedTime2","round","Date","now","loaded","total","toFixed","interval","setInterval","abort","complete","fn","status","progress","responseText","contentType","getResponseHeader","response","parse","onload","onerror","onabort","ontimeout","setRequestHeader","send","onKeydown","keyCode","preventDefault","iframe","src","setAttribute","action","appendChild","getResponseData","doc","contentWindow","err","contentDocument","innerHTML","_this5","removeEventListener","addEventListener","submit","res","parentNode","removeChild","thread","_el","dropElement","onDragenter","onDragleave","onDragover","onDrop","querySelector","$root","dropActive","nodeName","screenX","screenY","fromElement","offsetX","addDataTransfer"],"mappings":"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"}
<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	                       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
	                       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
	">
    <!-- dataSource -->
    <bean id="mydataSource" destroy-method="close" 
                class="org.apache.commons.dbcp.BasicDataSource">
    <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
    <property name="url" value="jdbc:mysql://localhost:3306/wangxin?useUnicode=true&amp;characterEncoding=utf8"/>
    <property name="username" value="root"/>
    <property name="password" value=""/>
    <property name="maxActive" value="10"></property>
    <property name="initialSize" value="2"/>
    <property name="minIdle" value="2"></property>
    <property name="maxIdle" value="3"></property>
   </bean>
   <!-- mySessionFactory -->
   <bean id="mySessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
	    <property name="dataSource" ref="mydataSource"/>
	    <property name="mappingResources">
	        <list>
	            <value>com/wangxin/mapping/Dept.hbm.xml</value>
	            <value>com/wangxin/mapping/Emp.hbm.xml</value>
	        </list>
	    </property>
	    <property name="hibernateProperties">
	        <props>
	                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
	                <prop key="hibernate.show_sql">true</prop>
	                <prop key="hibernate.format_sql">true</prop>
	        </props>
	    </property>
   </bean>
    
    <bean id="deptDao" class="com.wangxin.dao.impl.HIbernateDeptDaoImpl">
        <property name="sessionFactory" ref="mySessionFactory"></property>
    </bean>
    <bean id="deptService" class="com.wangxin.service.impl.DeptServiceImpl">
        <property name="deptDao" ref="deptDao"></property>
    </bean>
    <!-- 事务管理Bean -->
    <bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="mySessionFactory"></property>
    </bean>
    <!-- 定义事务通知 -->
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="add" propagation="REQUIRED"></tx:method>
        </tx:attributes>
    </tx:advice>
    <!-- 采用AOP将事务切入到Service层组件 -->
    <aop:config>
        <aop:pointcut expression="within(com.wangxin.serbice.impl.*)" id="servicePointcut"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="servicePointcut"/>
    </aop:config>
    <!-- AOP配置 -->
    <bean id="logAscept" class="com.wangxin.aop.LogAspect"></bean>
    <aop:config>
                    <!-- 定义切入点，指定目标对象和方法 -->
        <aop:pointcut expression="within(com.wangxin.service.impl.*)" id="servicePointcut"></aop:pointcut>
                        <!-- 指定切面 -->
        <aop:aspect id="loggerAscept" ref="logAscept">
                                <!-- 指定环绕通知 -->
            <aop:around method="logger" pointcut-ref="servicePointcut"/>
        </aop:aspect>
    </aop:config>
</beans>
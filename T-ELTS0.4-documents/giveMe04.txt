									
									考试系统
									
1.MVC并不是整个系统的架构，只是界面层与业务层的概述。
	1)ExamServiceImpl:Module 业务模型: 软件核心功能的抽象,封装软件核心功能.
 								 如: 注册, 登录, 开始考试, 交卷等
	2)LoginFrame:界面登陆属于：View 视图 (表现): 软件的界面视图, 用来呈现用户数据状态, 
 							接受用户请求. 界面中只包含界面显示处理逻辑.
 			和MenuFrame同属于表现层。 								 
	3)ClientContext处理页面：Controller: 控制器: 耦合界面与业务模型. 响应处理用户请求
						将用户数据和请求转发给业务模型, 根据业务模型的处理结果, 更新
  						转发视图界面. 控制器中包含界面的控制逻辑.
		包含三个变量：loginFrame  menuFrame  examService
	4) MVC 请求流程: 用户访问View, 发起请求, 请求由控制器处理, 
 			控制器请求业务模型完成业务处理, 控制器根据业务处理结果更新用户界面.  
 			
2.登陆流程：
longinFram->ClinentContext（处理界面）  login()->ExamService login真实处理业务逻辑－＞
EntityContext（加载实体）-->user.txt

3.异常：
nullPointException
	a.Frame界面  idField  getUserId(){ idField.getText()}其中idField必须赋值。
ClassCastException类型转化异常
NumberFormatException数字格式异常
	“123”->123
	"abc"->整数,时可以发生数字格式异常，如：Integer.parseInt("abc")

 	
 	

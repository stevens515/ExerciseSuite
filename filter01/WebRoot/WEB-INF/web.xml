<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" 
	xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
  
  <!--配置上下文参数 -->
  <context-param>
    <param-name>cba</param-name>
    <param-value>东北虎队</param-value>
  </context-param>
  
  <!-- 配置过滤器 -->
  <filter>
    <!-- 注册的过滤器的名称,在后面配置过滤器的映射中要使用该名称 -->
    <filter-name>TestFilter01</filter-name>
    <!-- 配置过滤器的完整的路径名-->
    <filter-class>filter.TestFilter01</filter-class>
    <init-param>
       <param-name>book</param-name>
       <param-value>笑傲江湖</param-value>
    </init-param>
    <init-param>
       <param-name>image</param-name>
       <param-value>美女图</param-value>
    </init-param>
  </filter>
  
  <!-- 配置过滤器的映射 -->
  <filter-mapping>
    <!-- 使用上面配置好注册的过滤器的名称 -->
    <filter-name>TestFilter01</filter-name>
    <!-- 配置该过滤器拦截器的资源,这里拦截器所有的资源-->
    <url-pattern>/*</url-pattern>
 
       <!--REQUEST:当客户端直接访问某个资源时(重定向),如果没有配置REQUEST,则客户端的请求不能被过滤器拦截.默认值  -->
       <dispatcher>REQUEST</dispatcher>
       
       <!--FORWARD:如果目标资源是通过RequestDispatcher的forward()方法访问时，那么该过滤器将被调用，除此之外，该过滤器不会被调用 -->
       <dispatcher>FORWARD</dispatcher>
       
       <!--INCLUDE：如果目标资源是通过RequestDispatcher的include()方法访问时，那么该过滤器将被调用。除此之外，该过滤器不会被调用-->
       <dispatcher>INCLUDE</dispatcher>
    
       <!--ERROR：如果目标资源是通过声明式异常处理机制调用时，那么该过滤器将被调用。除此之外，过滤器不会被调用-->
       <dispatcher>ERROR</dispatcher>
          	
  </filter-mapping>
  <servlet>
    <servlet-name>LoginServlet</servlet-name>
    <servlet-class>web.LoginServlet</servlet-class>
  </servlet>

  <servlet-mapping>
    <servlet-name>LoginServlet</servlet-name>
    <url-pattern>/loginServlet</url-pattern>
  </servlet-mapping> 
  	
	<servlet>
    <servlet-name>SaveEmpServlet</servlet-name>
    <servlet-class>web.SaveEmpServlet</servlet-class>
  </servlet>

  <servlet-mapping>
    <servlet-name>SaveEmpServlet</servlet-name>
    <url-pattern>/saveEmpServlet</url-pattern>
  </servlet-mapping>  	
  	
  <error-page>
     <error-code>404</error-code>
     <location>/error.jsp</location>
  </error-page>
  
</web-app>

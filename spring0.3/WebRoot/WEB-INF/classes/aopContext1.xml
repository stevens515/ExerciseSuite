<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">

	<bean id="userdao" scope="prototype" class="com.tarena.dao.impl.UserDAOImpl">
	</bean>
	<bean id="deptdao" scope="prototype" class="com.tarena.dao.impl.DeptDAOImpl">
	</bean>

	<bean id="loggerbean" scope="singleton" class="com.tarena.aop.LoggerBean">
	</bean>



	<bean id="exceptionloggerbean" class="com.tarena.aop.ExceptionLogger"></bean>

	<aop:config>
		<!-- 定义切入点,指定所有dao为目标对象 -->
		<aop:pointcut id="daocut" expression="within(com.tarena.dao.impl.*)" />
		<!-- 切面  把loggerbean的optLogger()作用上来-->
		<!-- 记录操作日志 -->
		<aop:aspect id="loggeraspect" ref="loggerbean">
		<!-- 采用环绕通知切入 -->
			<aop:around pointcut-ref="daocut" method="optLogger" />
		</aop:aspect>
		<!-- 记录异常信息日志 -->
		<aop:aspect id="exceptionaspect" ref="exceptionloggerbean">
			<!-- ex与 ExceptionLogger类中exceptionLogger(Exception ex)中的参数相同 -->
			<!-- 采用异常通知切入,把异常对象传给ex参数 -->
			<aop:after-throwing pointcut-ref="daocut" method="exceptionLogger"
				throwing="ex" />
		</aop:aspect>
	</aop:config>
	
	
	
</beans>